package hamroshare.ui;

import hamroshare.config.HamroPath;
import hamroshare.eventhandlers.Info;
import hamroshare.login.LoginController;
import hamroshare.ui.popup.Message;
import hamroshare.uicomponents.Toaster;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import org.apache.commons.io.IOUtils;

/**
 *
 * @author Sijan Bhandari
 */
public class Sellpanel extends javax.swing.JPanel {

    /**
     * Creates new form Sellpanel
     */
    StockPortfolio port;

    public Sellpanel() {
        initComponents();
    }

    public void SellMe(StockPortfolio port) {
        this.port = port;
        this.setVisible(true);
        name.setText("Selling: " + port.port.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JLabel();
        cancel = new RSMaterialComponent.RSButtonMaterialRipple();
        rSButtonMaterialUno1 = new RSMaterialComponent.RSButtonMaterialUno();
        units = new RSMaterialComponent.RSTextFieldMaterial();
        price = new RSMaterialComponent.RSTextFieldMaterial();

        setBackground(new java.awt.Color(51, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        name.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.setText("Selling :");
        add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 330, -1));

        cancel.setBackground(new java.awt.Color(255, 102, 102));
        cancel.setText("Cancel");
        cancel.setBackgroundHover(new java.awt.Color(204, 0, 0));
        cancel.setBorderPainted(false);
        cancel.setFocusPainted(false);
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 130, -1));

        rSButtonMaterialUno1.setBackground(new java.awt.Color(0, 204, 153));
        rSButtonMaterialUno1.setText("Continue");
        rSButtonMaterialUno1.setBackgroundHover(new java.awt.Color(0, 102, 0));
        rSButtonMaterialUno1.setBorderPainted(false);
        rSButtonMaterialUno1.setFocusPainted(false);
        rSButtonMaterialUno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonMaterialUno1ActionPerformed(evt);
            }
        });
        add(rSButtonMaterialUno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 160, -1));

        units.setBackground(new java.awt.Color(51, 51, 51));
        units.setForeground(new java.awt.Color(255, 255, 255));
        units.setColorMaterial(new java.awt.Color(255, 255, 255));
        units.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        units.setPhColor(new java.awt.Color(255, 255, 255));
        units.setPlaceholder("Units");
        add(units, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        price.setBackground(new java.awt.Color(51, 51, 51));
        price.setForeground(new java.awt.Color(255, 255, 255));
        price.setColorMaterial(new java.awt.Color(255, 255, 255));
        price.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        price.setPhColor(new java.awt.Color(255, 255, 255));
        price.setPlaceholder("Selling price per Unit Rs.");
        add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.setVisible(false);
        units.setText("");
        price.setText("");
    }//GEN-LAST:event_cancelActionPerformed

    private void rSButtonMaterialUno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonMaterialUno1ActionPerformed
        if (price.getText().equals("") || units.getText().equals("")) {
            Toaster toaster = new Toaster(this);
            toaster.error("NO Details Provided");
        } else {
            double p = Double.parseDouble(price.getText());
            int availableUnits = Integer.parseInt(port.port.getKitta());
            int sellingUnits = Integer.parseInt(units.getText());
            if (sellingUnits > availableUnits || sellingUnits <= 0 || Double.parseDouble(price.getText()) < 0) {
                Info.display(this, "Wrong Details", 0, 2000);
            } else {
                URL url;
                try {
                    url = new URL(HamroPath.ApiHome+"/user/portfolio/sellstock/"
                            + LoginController.userDto.getId() + "/"
                            + port.port.getName() + "/"
                            + sellingUnits + "/"
                            + Double.parseDouble(price.getText()));
                    SellStock stock=new SellStock(url,this);
                    stock.start();
                    cancel.doClick();
                    Message me = new Message(Dash.dash, true);
                    me.setMessages("Sold " + port.port.getName(), port.port.getTotalGainOrLoss());
                    me.showAlert();
                } catch (MalformedURLException ex) {
                    Info.display(this, "Wrong Details", 0, 2000);
                    Logger.getLogger(Sellpanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_rSButtonMaterialUno1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonMaterialRipple cancel;
    private javax.swing.JLabel name;
    private RSMaterialComponent.RSTextFieldMaterial price;
    private RSMaterialComponent.RSButtonMaterialUno rSButtonMaterialUno1;
    private RSMaterialComponent.RSTextFieldMaterial units;
    // End of variables declaration//GEN-END:variables
class SellStock extends Thread {

        private URL url;
        JPanel panel;

        public SellStock(URL url,JPanel panel) {
            this.url = url;
            this.panel=panel;
        }

        @Override
        public void run() {
            try {
                String json1 = IOUtils.toString(url.openStream());
                Profile.profile.refreshData();
            } catch (IOException ex) {
                Info.display(panel, "Wrong Details", 0, 2000);
                Logger.getLogger(Sellpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
